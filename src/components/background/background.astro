---
const colors = [
  "#FF1744", // 빨간색
  "#F50057", // 핑크
  "#FF4081", // 밝은 핑크
  "#E91E63", // 분홍색
  "#D81B60", // 진한 분홍색
  "#C2185B", // 라즈베리
  "#FF80AB", // 연한 핑크
  "#FF5252", // 밝은 빨간색
  "#FF8A80", // 연한 빨간색
  "#D50000", // 진한 빨간색
  "#AD1457", // 진한 자홍색
  "#FCE4EC", // 매우 연한 핑크
  "#F8BBD0", // 파스텔 핑크
  "#EC407A", // 중간 핑크
  "#FF6090", // 산호색 핑크
];
const animations = ["fall1", "fall2", "fall3"];
const durations = [10, 10];
const sizes = [10, 12, 14, 15, 16, 18, 20, 22];
const array = new Array(20).fill(0).map((_, i) => i);
---

<div class="animation_container">
  {
    array.map(() => {
      const animationName =
        animations[Math.floor(Math.random() * animations.length)];
      const animationDuration =
        durations[Math.floor(Math.random() * durations.length)];
      const size = sizes[Math.floor(Math.random() * sizes.length)];
      const color = colors[Math.floor(Math.random() * colors.length)];
      const leftPos = Math.random() * 100;

      return (
        <div
          class="heart"
          style={{
            animation: `${animationName} ${animationDuration}s linear infinite`,
            left: `${leftPos}%`,
          }}
        >
          <svg width={size} height={size} viewBox="0 0 24 24" fill={color}>
            <path d="M12 21.35l-1.45-1.32C5.4 15.36 2 12.28 2 8.5 2 5.42 4.42 3 7.5 3c1.74 0 3.41.81 4.5 2.09C13.09 3.81 14.76 3 16.5 3 19.58 3 22 5.42 22 8.5c0 3.78-3.4 6.86-8.55 11.54L12 21.35z" />
          </svg>
        </div>
      );
    })
  }
</div>

<style>
  .animation_container {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    z-index: 0; /* content 아래에 위치하지만 container 위에 */
    overflow: hidden;
    pointer-events: none; /* 마우스 이벤트가 컨테이너를 통과하도록 함 */
  }

  .heart {
    position: absolute;
    z-index: 1;
    pointer-events: none;
    filter: drop-shadow(0 0 2px rgba(255, 255, 255, 0.5));
    top: 0px;
  }

  @keyframes fall1 {
    0% {
      transform: translateY(0) translateX(10px) rotate(0deg) scale(0.9);
      opacity: 0;
    }
    10% {
      opacity: 1;
    }
    100% {
      transform: translateY(100%) translateX(-50px) rotate(540deg) scale(1.1);
    }
  }

  @keyframes fall2 {
    0% {
      transform: translateY(-20px) translateX(-15px) rotate(0deg) scale(1);
      opacity: 0;
    }
    10% {
      opacity: 1;
    }
    100% {
      transform: translateY(calc(100% + 50px)) translateX(30px) rotate(-360deg)
        scale(0.8);
    }
  }

  @keyframes fall3 {
    0% {
      transform: translateY(-20px) translateX(0px) rotate(0deg) scale(0.8);
      opacity: 0;
    }
    10% {
      opacity: 1;
    }
    100% {
      transform: translateY(calc(100% + 50px)) translateX(-20px) rotate(420deg)
        scale(1.1);
      opacity: 0;
    }
  }

  @keyframes diagonal1 {
    0% {
      transform: translateY(-20px) translateX(-100px) rotate(0deg) scale(0.9);
      opacity: 0;
    }
    10% {
      opacity: 1;
    }
    100% {
      transform: translateY(100vh) translateX(150px) rotate(180deg) scale(1.2);
      opacity: 0;
    }
  }

  @keyframes diagonal2 {
    0% {
      transform: translateY(-20px) translateX(-150px) rotate(45deg) scale(1);
      opacity: 0;
    }
    10% {
      opacity: 1;
    }
    50% {
      transform: translateY(50vh) translateX(0px) rotate(180deg) scale(0.8);
    }
    100% {
      transform: translateY(100vh) translateX(200px) rotate(360deg) scale(1.1);
      opacity: 0;
    }
  }

  @keyframes flip1 {
    0% {
      transform: translateY(-20px) translateX(0) rotateX(0deg) scale(0.9);
      opacity: 0;
    }
    10% {
      opacity: 1;
    }
    30% {
      transform: translateY(30vh) translateX(20px) rotateX(180deg) scale(1);
    }
    60% {
      transform: translateY(60vh) translateX(0px) rotateX(360deg) scale(0.9);
    }
    100% {
      transform: translateY(100vh) translateX(-30px) rotateX(540deg) scale(0.8);
      opacity: 0;
    }
  }

  @keyframes flip2 {
    0% {
      transform: translateY(-20px) translateX(10px) rotateY(0deg) scale(1);
      opacity: 0;
    }
    10% {
      opacity: 1;
    }
    25% {
      transform: translateY(25vh) translateX(-20px) rotateY(180deg) scale(0.9);
    }
    50% {
      transform: translateY(50vh) translateX(30px) rotateY(360deg) scale(1.1);
    }
    75% {
      transform: translateY(75vh) translateX(-10px) rotateY(540deg) scale(0.95);
    }
    100% {
      transform: translateY(100vh) translateX(15px) rotateY(720deg) scale(1);
      opacity: 0;
    }
  }

  @keyframes zigzag {
    0% {
      transform: translateY(-20px) translateX(0) rotate(0deg) scale(0.9);
      opacity: 0;
    }
    10% {
      opacity: 1;
    }
    25% {
      transform: translateY(25vh) translateX(50px) rotate(90deg) scale(1);
    }
    50% {
      transform: translateY(50vh) translateX(-50px) rotate(180deg) scale(0.8);
    }
    75% {
      transform: translateY(75vh) translateX(70px) rotate(270deg) scale(1.2);
    }
    100% {
      transform: translateY(100vh) translateX(-40px) rotate(360deg) scale(0.9);
      opacity: 0;
    }
  }
</style>
