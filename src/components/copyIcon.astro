---
const { content } = Astro.props;
---

<copy-icon data-text={content}>
  <svg
    class="copy_icon"
    xmlns="http://www.w3.org/2000/svg"
    width={16}
    height={16}
    viewBox="0 0 24 24"
    fill="none"
    stroke="currentColor"
    stroke-width="2"
    stroke-linecap="round"
    stroke-linejoin="round"
  >
    <rect x="9" y="9" width="13" height="13" rx="2" ry="2"></rect>
    <path d="M5 15H4a2 2 0 0 1-2-2V4a2 2 0 0 1 2-2h9a2 2 0 0 1 2 2v1"></path>
  </svg>
  <svg
    class="copied_icon"
    xmlns="http://www.w3.org/2000/svg"
    viewBox="0 0 24 24"
    width={16}
    height={16}
  >
    <path
      d="M9 16.2L4.8 12l-1.4 1.4L9 19 21 7l-1.4-1.4L9 16.2z"
      stroke-width="2"
      stroke="#555"
      fill="#555"></path>
  </svg>
</copy-icon>

<script>
  if (!customElements.get("copy-icon")) {
    class CopyButton extends HTMLElement {
      constructor() {
        super();
        this.addEventListener("click", this.copyText);
      }

      async copyText() {
        const text = this.getAttribute("data-text") || "";
        await navigator.clipboard.writeText(text);

        this.classList.add("copied");

        setTimeout(() => {
          this.classList.remove("copied");
        }, 2000);
      }
    }

    customElements.define("copy-icon", CopyButton);
  }
</script>

<style>
  copy-icon.copied {
    .copied_icon {
      display: block;
    }

    .copy_icon {
      display: none;
    }
  }
  copy-icon {
    .copied_icon {
      display: none;
    }

    .copy_icon {
      display: block;
      cursor: pointer;
    }
  }
</style>
